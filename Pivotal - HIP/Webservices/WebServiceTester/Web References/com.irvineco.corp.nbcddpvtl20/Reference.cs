//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3615.
// 
#pragma warning disable 1591

namespace WebServiceTester.com.irvineco.corp.nbcddpvtl20 {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TICPivotalQAServiceSvcSoap", Namespace="http://IrvinePacific/QA/TICPivotalQAService")]
    public partial class TICPivotalQAServiceSvc : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AuthenticateUserLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPivotalMD5MessageDigestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduledInspectionsForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInspectionsForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewInspectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadInspectionByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyInspectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestHarnessOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TICPivotalQAServiceSvc() {
            this.Url = global::WebServiceTester.Properties.Settings.Default.WebServiceTester_com_irvineco_corp_nbcddpvtl20_TICPivotalQAServiceSvc;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AuthenticateUserLoginCompletedEventHandler AuthenticateUserLoginCompleted;
        
        /// <remarks/>
        public event GetPivotalMD5MessageDigestCompletedEventHandler GetPivotalMD5MessageDigestCompleted;
        
        /// <remarks/>
        public event GetScheduledInspectionsForUserCompletedEventHandler GetScheduledInspectionsForUserCompleted;
        
        /// <remarks/>
        public event GetInspectionsForUserCompletedEventHandler GetInspectionsForUserCompleted;
        
        /// <remarks/>
        public event CreateNewInspectionCompletedEventHandler CreateNewInspectionCompleted;
        
        /// <remarks/>
        public event LoadInspectionByIdCompletedEventHandler LoadInspectionByIdCompleted;
        
        /// <remarks/>
        public event ApplyInspectionCompletedEventHandler ApplyInspectionCompleted;
        
        /// <remarks/>
        public event TestHarnessCompletedEventHandler TestHarnessCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://IrvinePacific/QA/TICPivotalQAService/AuthenticateUserLogin", RequestNamespace="http://IrvinePacific/QA/TICPivotalQAService", ResponseNamespace="http://IrvinePacific/QA/TICPivotalQAService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserObj AuthenticateUserLogin(string userName, string passwordHash) {
            object[] results = this.Invoke("AuthenticateUserLogin", new object[] {
                        userName,
                        passwordHash});
            return ((UserObj)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateUserLoginAsync(string userName, string passwordHash) {
            this.AuthenticateUserLoginAsync(userName, passwordHash, null);
        }
        
        /// <remarks/>
        public void AuthenticateUserLoginAsync(string userName, string passwordHash, object userState) {
            if ((this.AuthenticateUserLoginOperationCompleted == null)) {
                this.AuthenticateUserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUserLoginOperationCompleted);
            }
            this.InvokeAsync("AuthenticateUserLogin", new object[] {
                        userName,
                        passwordHash}, this.AuthenticateUserLoginOperationCompleted, userState);
        }
        
        private void OnAuthenticateUserLoginOperationCompleted(object arg) {
            if ((this.AuthenticateUserLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUserLoginCompleted(this, new AuthenticateUserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://IrvinePacific/QA/TICPivotalQAService/GetPivotalMD5MessageDigest", RequestNamespace="http://IrvinePacific/QA/TICPivotalQAService", ResponseNamespace="http://IrvinePacific/QA/TICPivotalQAService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPivotalMD5MessageDigest(string plainTextPassword) {
            object[] results = this.Invoke("GetPivotalMD5MessageDigest", new object[] {
                        plainTextPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPivotalMD5MessageDigestAsync(string plainTextPassword) {
            this.GetPivotalMD5MessageDigestAsync(plainTextPassword, null);
        }
        
        /// <remarks/>
        public void GetPivotalMD5MessageDigestAsync(string plainTextPassword, object userState) {
            if ((this.GetPivotalMD5MessageDigestOperationCompleted == null)) {
                this.GetPivotalMD5MessageDigestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPivotalMD5MessageDigestOperationCompleted);
            }
            this.InvokeAsync("GetPivotalMD5MessageDigest", new object[] {
                        plainTextPassword}, this.GetPivotalMD5MessageDigestOperationCompleted, userState);
        }
        
        private void OnGetPivotalMD5MessageDigestOperationCompleted(object arg) {
            if ((this.GetPivotalMD5MessageDigestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPivotalMD5MessageDigestCompleted(this, new GetPivotalMD5MessageDigestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://IrvinePacific/QA/TICPivotalQAService/GetScheduledInspectionsForUser", RequestNamespace="http://IrvinePacific/QA/TICPivotalQAService", ResponseNamespace="http://IrvinePacific/QA/TICPivotalQAService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ScheduledInspectionWrapper GetScheduledInspectionsForUser(string userLogin) {
            object[] results = this.Invoke("GetScheduledInspectionsForUser", new object[] {
                        userLogin});
            return ((ScheduledInspectionWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduledInspectionsForUserAsync(string userLogin) {
            this.GetScheduledInspectionsForUserAsync(userLogin, null);
        }
        
        /// <remarks/>
        public void GetScheduledInspectionsForUserAsync(string userLogin, object userState) {
            if ((this.GetScheduledInspectionsForUserOperationCompleted == null)) {
                this.GetScheduledInspectionsForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduledInspectionsForUserOperationCompleted);
            }
            this.InvokeAsync("GetScheduledInspectionsForUser", new object[] {
                        userLogin}, this.GetScheduledInspectionsForUserOperationCompleted, userState);
        }
        
        private void OnGetScheduledInspectionsForUserOperationCompleted(object arg) {
            if ((this.GetScheduledInspectionsForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduledInspectionsForUserCompleted(this, new GetScheduledInspectionsForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://IrvinePacific/QA/TICPivotalQAService/GetInspectionsForUser", RequestNamespace="http://IrvinePacific/QA/TICPivotalQAService", ResponseNamespace="http://IrvinePacific/QA/TICPivotalQAService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InspectionWrapper GetInspectionsForUser(string userLogin) {
            object[] results = this.Invoke("GetInspectionsForUser", new object[] {
                        userLogin});
            return ((InspectionWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void GetInspectionsForUserAsync(string userLogin) {
            this.GetInspectionsForUserAsync(userLogin, null);
        }
        
        /// <remarks/>
        public void GetInspectionsForUserAsync(string userLogin, object userState) {
            if ((this.GetInspectionsForUserOperationCompleted == null)) {
                this.GetInspectionsForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInspectionsForUserOperationCompleted);
            }
            this.InvokeAsync("GetInspectionsForUser", new object[] {
                        userLogin}, this.GetInspectionsForUserOperationCompleted, userState);
        }
        
        private void OnGetInspectionsForUserOperationCompleted(object arg) {
            if ((this.GetInspectionsForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInspectionsForUserCompleted(this, new GetInspectionsForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://IrvinePacific/QA/TICPivotalQAService/CreateNewInspection", RequestNamespace="http://IrvinePacific/QA/TICPivotalQAService", ResponseNamespace="http://IrvinePacific/QA/TICPivotalQAService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateNewInspection(string projectId, string phaseName, string inspectionTypeId, string inspectionScope, string createdById, string inspectorId, string[] selectedScopeItems) {
            object[] results = this.Invoke("CreateNewInspection", new object[] {
                        projectId,
                        phaseName,
                        inspectionTypeId,
                        inspectionScope,
                        createdById,
                        inspectorId,
                        selectedScopeItems});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewInspectionAsync(string projectId, string phaseName, string inspectionTypeId, string inspectionScope, string createdById, string inspectorId, string[] selectedScopeItems) {
            this.CreateNewInspectionAsync(projectId, phaseName, inspectionTypeId, inspectionScope, createdById, inspectorId, selectedScopeItems, null);
        }
        
        /// <remarks/>
        public void CreateNewInspectionAsync(string projectId, string phaseName, string inspectionTypeId, string inspectionScope, string createdById, string inspectorId, string[] selectedScopeItems, object userState) {
            if ((this.CreateNewInspectionOperationCompleted == null)) {
                this.CreateNewInspectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewInspectionOperationCompleted);
            }
            this.InvokeAsync("CreateNewInspection", new object[] {
                        projectId,
                        phaseName,
                        inspectionTypeId,
                        inspectionScope,
                        createdById,
                        inspectorId,
                        selectedScopeItems}, this.CreateNewInspectionOperationCompleted, userState);
        }
        
        private void OnCreateNewInspectionOperationCompleted(object arg) {
            if ((this.CreateNewInspectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewInspectionCompleted(this, new CreateNewInspectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://IrvinePacific/QA/TICPivotalQAService/LoadInspectionById", RequestNamespace="http://IrvinePacific/QA/TICPivotalQAService", ResponseNamespace="http://IrvinePacific/QA/TICPivotalQAService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Inspection LoadInspectionById(string inspectionId) {
            object[] results = this.Invoke("LoadInspectionById", new object[] {
                        inspectionId});
            return ((Inspection)(results[0]));
        }
        
        /// <remarks/>
        public void LoadInspectionByIdAsync(string inspectionId) {
            this.LoadInspectionByIdAsync(inspectionId, null);
        }
        
        /// <remarks/>
        public void LoadInspectionByIdAsync(string inspectionId, object userState) {
            if ((this.LoadInspectionByIdOperationCompleted == null)) {
                this.LoadInspectionByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadInspectionByIdOperationCompleted);
            }
            this.InvokeAsync("LoadInspectionById", new object[] {
                        inspectionId}, this.LoadInspectionByIdOperationCompleted, userState);
        }
        
        private void OnLoadInspectionByIdOperationCompleted(object arg) {
            if ((this.LoadInspectionByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadInspectionByIdCompleted(this, new LoadInspectionByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://IrvinePacific/QA/TICPivotalQAService/ApplyInspection", RequestNamespace="http://IrvinePacific/QA/TICPivotalQAService", ResponseNamespace="http://IrvinePacific/QA/TICPivotalQAService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApplyInspection(Inspection inspection, ActionForInspection action) {
            this.Invoke("ApplyInspection", new object[] {
                        inspection,
                        action});
        }
        
        /// <remarks/>
        public void ApplyInspectionAsync(Inspection inspection, ActionForInspection action) {
            this.ApplyInspectionAsync(inspection, action, null);
        }
        
        /// <remarks/>
        public void ApplyInspectionAsync(Inspection inspection, ActionForInspection action, object userState) {
            if ((this.ApplyInspectionOperationCompleted == null)) {
                this.ApplyInspectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyInspectionOperationCompleted);
            }
            this.InvokeAsync("ApplyInspection", new object[] {
                        inspection,
                        action}, this.ApplyInspectionOperationCompleted, userState);
        }
        
        private void OnApplyInspectionOperationCompleted(object arg) {
            if ((this.ApplyInspectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyInspectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://IrvinePacific/QA/TICPivotalQAService/TestHarness", RequestNamespace="http://IrvinePacific/QA/TICPivotalQAService", ResponseNamespace="http://IrvinePacific/QA/TICPivotalQAService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestHarness() {
            object[] results = this.Invoke("TestHarness", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestHarnessAsync() {
            this.TestHarnessAsync(null);
        }
        
        /// <remarks/>
        public void TestHarnessAsync(object userState) {
            if ((this.TestHarnessOperationCompleted == null)) {
                this.TestHarnessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestHarnessOperationCompleted);
            }
            this.InvokeAsync("TestHarness", new object[0], this.TestHarnessOperationCompleted, userState);
        }
        
        private void OnTestHarnessOperationCompleted(object arg) {
            if ((this.TestHarnessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestHarnessCompleted(this, new TestHarnessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IrvinePacific/QA/TICPivotalQAService")]
    public partial class UserObj {
        
        private string contactHexIdField;
        
        private string typeField;
        
        private string first_NameField;
        
        private string last_NameField;
        
        private string middle_InitialField;
        
        private string titleField;
        
        private string suffixField;
        
        private string company_NameField;
        
        private string emailField;
        
        private string passwordHashField;
        
        private UserObj[] impersUsersField;
        
        /// <remarks/>
        public string contactHexId {
            get {
                return this.contactHexIdField;
            }
            set {
                this.contactHexIdField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string First_Name {
            get {
                return this.first_NameField;
            }
            set {
                this.first_NameField = value;
            }
        }
        
        /// <remarks/>
        public string Last_Name {
            get {
                return this.last_NameField;
            }
            set {
                this.last_NameField = value;
            }
        }
        
        /// <remarks/>
        public string Middle_Initial {
            get {
                return this.middle_InitialField;
            }
            set {
                this.middle_InitialField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public string Company_Name {
            get {
                return this.company_NameField;
            }
            set {
                this.company_NameField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string passwordHash {
            get {
                return this.passwordHashField;
            }
            set {
                this.passwordHashField = value;
            }
        }
        
        /// <remarks/>
        public UserObj[] impersUsers {
            get {
                return this.impersUsersField;
            }
            set {
                this.impersUsersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IrvinePacific/QA/TICPivotalQAService")]
    public partial class InspectedScopeItem {
        
        private string inspectedScopeItemIdField;
        
        private string projectIdField;
        
        private string phaseNameField;
        
        private string inspectionTypeIdField;
        
        private string scopeItemNumberField;
        
        private string inspectionIdField;
        
        private string inspectionScopeField;
        
        private string[] unitsField;
        
        /// <remarks/>
        public string inspectedScopeItemId {
            get {
                return this.inspectedScopeItemIdField;
            }
            set {
                this.inspectedScopeItemIdField = value;
            }
        }
        
        /// <remarks/>
        public string projectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public string phaseName {
            get {
                return this.phaseNameField;
            }
            set {
                this.phaseNameField = value;
            }
        }
        
        /// <remarks/>
        public string inspectionTypeId {
            get {
                return this.inspectionTypeIdField;
            }
            set {
                this.inspectionTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string scopeItemNumber {
            get {
                return this.scopeItemNumberField;
            }
            set {
                this.scopeItemNumberField = value;
            }
        }
        
        /// <remarks/>
        public string inspectionId {
            get {
                return this.inspectionIdField;
            }
            set {
                this.inspectionIdField = value;
            }
        }
        
        /// <remarks/>
        public string inspectionScope {
            get {
                return this.inspectionScopeField;
            }
            set {
                this.inspectionScopeField = value;
            }
        }
        
        /// <remarks/>
        public string[] units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IrvinePacific/QA/TICPivotalQAService")]
    public partial class InspectionItem {
        
        private string itemDescriptionField;
        
        private string workingNotesField;
        
        private string inspectionIdField;
        
        private string inspectionItemIdField;
        
        private string categoryDescField;
        
        private int categoryOrdinalField;
        
        private int itemOrdinalField;
        
        private bool isAcknowledgedField;
        
        /// <remarks/>
        public string itemDescription {
            get {
                return this.itemDescriptionField;
            }
            set {
                this.itemDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string workingNotes {
            get {
                return this.workingNotesField;
            }
            set {
                this.workingNotesField = value;
            }
        }
        
        /// <remarks/>
        public string inspectionId {
            get {
                return this.inspectionIdField;
            }
            set {
                this.inspectionIdField = value;
            }
        }
        
        /// <remarks/>
        public string inspectionItemId {
            get {
                return this.inspectionItemIdField;
            }
            set {
                this.inspectionItemIdField = value;
            }
        }
        
        /// <remarks/>
        public string categoryDesc {
            get {
                return this.categoryDescField;
            }
            set {
                this.categoryDescField = value;
            }
        }
        
        /// <remarks/>
        public int categoryOrdinal {
            get {
                return this.categoryOrdinalField;
            }
            set {
                this.categoryOrdinalField = value;
            }
        }
        
        /// <remarks/>
        public int itemOrdinal {
            get {
                return this.itemOrdinalField;
            }
            set {
                this.itemOrdinalField = value;
            }
        }
        
        /// <remarks/>
        public bool isAcknowledged {
            get {
                return this.isAcknowledgedField;
            }
            set {
                this.isAcknowledgedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IrvinePacific/QA/TICPivotalQAService")]
    public partial class Inspection {
        
        private string inspectionTemplateIdField;
        
        private string inspectionTemplateNameField;
        
        private string projectIdField;
        
        private string projectNameField;
        
        private string phaseIdField;
        
        private string phaseNameField;
        
        private string inspectionTypeField;
        
        private string inspectionTypeIdField;
        
        private string inspectionStatusField;
        
        private string scheduledDateField;
        
        private string dueDateField;
        
        private string inspectedDateTimeField;
        
        private string supervisorIdField;
        
        private string supervisorNameField;
        
        private string createdByIdField;
        
        private string createdByNameField;
        
        private string signOffUserIdField;
        
        private string signOffUserNameField;
        
        private string reinspectionDueDateField;
        
        private string reinspectionCompleteDateField;
        
        private string reinspectionSignOffUserIdField;
        
        private string reinspectionSignOffUserNameField;
        
        private string escalationSignOffUserIdField;
        
        private string escalationSignOffUserNameField;
        
        private bool correctiveActionRequiredField;
        
        private string inspectionNotesField;
        
        private string templateVersionField;
        
        private string inspectionScopeField;
        
        private string inspectionIdField;
        
        private string inspectorNameField;
        
        private string inspectorIdField;
        
        private InspectionItem[] inspectionItemsField;
        
        private InspectedScopeItem[] inspectedScopeItemsField;
        
        /// <remarks/>
        public string inspectionTemplateId {
            get {
                return this.inspectionTemplateIdField;
            }
            set {
                this.inspectionTemplateIdField = value;
            }
        }
        
        /// <remarks/>
        public string inspectionTemplateName {
            get {
                return this.inspectionTemplateNameField;
            }
            set {
                this.inspectionTemplateNameField = value;
            }
        }
        
        /// <remarks/>
        public string projectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public string projectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
            }
        }
        
        /// <remarks/>
        public string phaseId {
            get {
                return this.phaseIdField;
            }
            set {
                this.phaseIdField = value;
            }
        }
        
        /// <remarks/>
        public string phaseName {
            get {
                return this.phaseNameField;
            }
            set {
                this.phaseNameField = value;
            }
        }
        
        /// <remarks/>
        public string inspectionType {
            get {
                return this.inspectionTypeField;
            }
            set {
                this.inspectionTypeField = value;
            }
        }
        
        /// <remarks/>
        public string inspectionTypeId {
            get {
                return this.inspectionTypeIdField;
            }
            set {
                this.inspectionTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string inspectionStatus {
            get {
                return this.inspectionStatusField;
            }
            set {
                this.inspectionStatusField = value;
            }
        }
        
        /// <remarks/>
        public string scheduledDate {
            get {
                return this.scheduledDateField;
            }
            set {
                this.scheduledDateField = value;
            }
        }
        
        /// <remarks/>
        public string dueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
            }
        }
        
        /// <remarks/>
        public string inspectedDateTime {
            get {
                return this.inspectedDateTimeField;
            }
            set {
                this.inspectedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string supervisorId {
            get {
                return this.supervisorIdField;
            }
            set {
                this.supervisorIdField = value;
            }
        }
        
        /// <remarks/>
        public string supervisorName {
            get {
                return this.supervisorNameField;
            }
            set {
                this.supervisorNameField = value;
            }
        }
        
        /// <remarks/>
        public string createdById {
            get {
                return this.createdByIdField;
            }
            set {
                this.createdByIdField = value;
            }
        }
        
        /// <remarks/>
        public string createdByName {
            get {
                return this.createdByNameField;
            }
            set {
                this.createdByNameField = value;
            }
        }
        
        /// <remarks/>
        public string signOffUserId {
            get {
                return this.signOffUserIdField;
            }
            set {
                this.signOffUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string signOffUserName {
            get {
                return this.signOffUserNameField;
            }
            set {
                this.signOffUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string reinspectionDueDate {
            get {
                return this.reinspectionDueDateField;
            }
            set {
                this.reinspectionDueDateField = value;
            }
        }
        
        /// <remarks/>
        public string reinspectionCompleteDate {
            get {
                return this.reinspectionCompleteDateField;
            }
            set {
                this.reinspectionCompleteDateField = value;
            }
        }
        
        /// <remarks/>
        public string reinspectionSignOffUserId {
            get {
                return this.reinspectionSignOffUserIdField;
            }
            set {
                this.reinspectionSignOffUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string reinspectionSignOffUserName {
            get {
                return this.reinspectionSignOffUserNameField;
            }
            set {
                this.reinspectionSignOffUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string escalationSignOffUserId {
            get {
                return this.escalationSignOffUserIdField;
            }
            set {
                this.escalationSignOffUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string escalationSignOffUserName {
            get {
                return this.escalationSignOffUserNameField;
            }
            set {
                this.escalationSignOffUserNameField = value;
            }
        }
        
        /// <remarks/>
        public bool correctiveActionRequired {
            get {
                return this.correctiveActionRequiredField;
            }
            set {
                this.correctiveActionRequiredField = value;
            }
        }
        
        /// <remarks/>
        public string inspectionNotes {
            get {
                return this.inspectionNotesField;
            }
            set {
                this.inspectionNotesField = value;
            }
        }
        
        /// <remarks/>
        public string templateVersion {
            get {
                return this.templateVersionField;
            }
            set {
                this.templateVersionField = value;
            }
        }
        
        /// <remarks/>
        public string inspectionScope {
            get {
                return this.inspectionScopeField;
            }
            set {
                this.inspectionScopeField = value;
            }
        }
        
        /// <remarks/>
        public string inspectionId {
            get {
                return this.inspectionIdField;
            }
            set {
                this.inspectionIdField = value;
            }
        }
        
        /// <remarks/>
        public string inspectorName {
            get {
                return this.inspectorNameField;
            }
            set {
                this.inspectorNameField = value;
            }
        }
        
        /// <remarks/>
        public string inspectorId {
            get {
                return this.inspectorIdField;
            }
            set {
                this.inspectorIdField = value;
            }
        }
        
        /// <remarks/>
        public InspectionItem[] inspectionItems {
            get {
                return this.inspectionItemsField;
            }
            set {
                this.inspectionItemsField = value;
            }
        }
        
        /// <remarks/>
        public InspectedScopeItem[] inspectedScopeItems {
            get {
                return this.inspectedScopeItemsField;
            }
            set {
                this.inspectedScopeItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IrvinePacific/QA/TICPivotalQAService")]
    public partial class InspectionWrapper {
        
        private FilterWrapper filterWrapperField;
        
        private Inspection[] inspectionsField;
        
        /// <remarks/>
        public FilterWrapper filterWrapper {
            get {
                return this.filterWrapperField;
            }
            set {
                this.filterWrapperField = value;
            }
        }
        
        /// <remarks/>
        public Inspection[] inspections {
            get {
                return this.inspectionsField;
            }
            set {
                this.inspectionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IrvinePacific/QA/TICPivotalQAService")]
    public partial class FilterWrapper {
        
        private ProjectFilter[] projFilterField;
        
        private PhaseFilter[] phaseFilterField;
        
        private InspectionTypeFilter[] inspectionTypeFilterField;
        
        /// <remarks/>
        public ProjectFilter[] projFilter {
            get {
                return this.projFilterField;
            }
            set {
                this.projFilterField = value;
            }
        }
        
        /// <remarks/>
        public PhaseFilter[] phaseFilter {
            get {
                return this.phaseFilterField;
            }
            set {
                this.phaseFilterField = value;
            }
        }
        
        /// <remarks/>
        public InspectionTypeFilter[] inspectionTypeFilter {
            get {
                return this.inspectionTypeFilterField;
            }
            set {
                this.inspectionTypeFilterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IrvinePacific/QA/TICPivotalQAService")]
    public partial class ProjectFilter {
        
        private string projectIdField;
        
        private string projectNameField;
        
        private string inspectionScopeField;
        
        /// <remarks/>
        public string projectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public string projectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
            }
        }
        
        /// <remarks/>
        public string inspectionScope {
            get {
                return this.inspectionScopeField;
            }
            set {
                this.inspectionScopeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IrvinePacific/QA/TICPivotalQAService")]
    public partial class PhaseFilter {
        
        private string projectIdField;
        
        private string phaseNameField;
        
        /// <remarks/>
        public string projectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public string PhaseName {
            get {
                return this.phaseNameField;
            }
            set {
                this.phaseNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IrvinePacific/QA/TICPivotalQAService")]
    public partial class InspectionTypeFilter {
        
        private string projectIdField;
        
        private string phaseNameField;
        
        private string inspectionTypeIdField;
        
        private string inspectionTypeField;
        
        /// <remarks/>
        public string projectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public string phaseName {
            get {
                return this.phaseNameField;
            }
            set {
                this.phaseNameField = value;
            }
        }
        
        /// <remarks/>
        public string inspectionTypeId {
            get {
                return this.inspectionTypeIdField;
            }
            set {
                this.inspectionTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string InspectionType {
            get {
                return this.inspectionTypeField;
            }
            set {
                this.inspectionTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IrvinePacific/QA/TICPivotalQAService")]
    public partial class ScheduledInspection {
        
        private string scheduledInspectionIdField;
        
        private string projectNameField;
        
        private string phaseNameField;
        
        private string lotRecordField;
        
        private string inspectionTypeField;
        
        private string scheduledDateField;
        
        private string projectedDateField;
        
        private string baseLineDateField;
        
        private string workflowStatusField;
        
        private string inspectionTypeIdField;
        
        private string projectIdField;
        
        /// <remarks/>
        public string scheduledInspectionId {
            get {
                return this.scheduledInspectionIdField;
            }
            set {
                this.scheduledInspectionIdField = value;
            }
        }
        
        /// <remarks/>
        public string projectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
            }
        }
        
        /// <remarks/>
        public string phaseName {
            get {
                return this.phaseNameField;
            }
            set {
                this.phaseNameField = value;
            }
        }
        
        /// <remarks/>
        public string lotRecord {
            get {
                return this.lotRecordField;
            }
            set {
                this.lotRecordField = value;
            }
        }
        
        /// <remarks/>
        public string inspectionType {
            get {
                return this.inspectionTypeField;
            }
            set {
                this.inspectionTypeField = value;
            }
        }
        
        /// <remarks/>
        public string scheduledDate {
            get {
                return this.scheduledDateField;
            }
            set {
                this.scheduledDateField = value;
            }
        }
        
        /// <remarks/>
        public string projectedDate {
            get {
                return this.projectedDateField;
            }
            set {
                this.projectedDateField = value;
            }
        }
        
        /// <remarks/>
        public string baseLineDate {
            get {
                return this.baseLineDateField;
            }
            set {
                this.baseLineDateField = value;
            }
        }
        
        /// <remarks/>
        public string workflowStatus {
            get {
                return this.workflowStatusField;
            }
            set {
                this.workflowStatusField = value;
            }
        }
        
        /// <remarks/>
        public string inspectionTypeId {
            get {
                return this.inspectionTypeIdField;
            }
            set {
                this.inspectionTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string projectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IrvinePacific/QA/TICPivotalQAService")]
    public partial class ScheduledInspectionWrapper {
        
        private FilterWrapper filterWrapperField;
        
        private ScheduledInspection[] scheduledInspectionsField;
        
        /// <remarks/>
        public FilterWrapper filterWrapper {
            get {
                return this.filterWrapperField;
            }
            set {
                this.filterWrapperField = value;
            }
        }
        
        /// <remarks/>
        public ScheduledInspection[] scheduledInspections {
            get {
                return this.scheduledInspectionsField;
            }
            set {
                this.scheduledInspectionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IrvinePacific/QA/TICPivotalQAService")]
    public enum ActionForInspection {
        
        /// <remarks/>
        Save,
        
        /// <remarks/>
        CreateNew,
        
        /// <remarks/>
        Delete,
        
        /// <remarks/>
        Approve,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AuthenticateUserLoginCompletedEventHandler(object sender, AuthenticateUserLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateUserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateUserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserObj Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserObj)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetPivotalMD5MessageDigestCompletedEventHandler(object sender, GetPivotalMD5MessageDigestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPivotalMD5MessageDigestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPivotalMD5MessageDigestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetScheduledInspectionsForUserCompletedEventHandler(object sender, GetScheduledInspectionsForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduledInspectionsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduledInspectionsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ScheduledInspectionWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ScheduledInspectionWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetInspectionsForUserCompletedEventHandler(object sender, GetInspectionsForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInspectionsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInspectionsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InspectionWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InspectionWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CreateNewInspectionCompletedEventHandler(object sender, CreateNewInspectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewInspectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewInspectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void LoadInspectionByIdCompletedEventHandler(object sender, LoadInspectionByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadInspectionByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadInspectionByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Inspection Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Inspection)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ApplyInspectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void TestHarnessCompletedEventHandler(object sender, TestHarnessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestHarnessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestHarnessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591