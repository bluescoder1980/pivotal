

/****************************************************************************
 ExceptionHandler.cs : Implementation of Web Services Exception Handler.
 Generated by Pivotal Web Services Generator r5.9.
 Do not modify  the contents of this file with the code editor.
 Copyright (c) 2006, Pivotal Corporation
 ***************************************************************************/
 
using System;
using System.Web.Services.Protocols;
using System.Xml;


namespace TICQAPBSComms
{
    /// <summary>
    /// Implements SOAP Exception handling.
    /// </summary>
    namespace Enumerations
    {
        public enum FaultCode
        {
            Client = 0,
            Server = 1
        }
    }
    public class ExceptionHandler
    {
        public ExceptionHandler()
        {
        }


        public SoapException RaiseException(string webServiceURI, string errorMessage,
                            string errorSource, Enumerations.FaultCode code)
        {
            XmlQualifiedName faultCode = null;
            //Identify the location of the FaultCode
            switch (code)
            {
                case Enumerations.FaultCode.Client:
                    faultCode = SoapException.ClientFaultCode;
                    break;
                case Enumerations.FaultCode.Server:
                    faultCode = SoapException.ServerFaultCode;
                    break;
            }

            XmlDocument xmlDoc = new XmlDocument();
            //Create the Detail node
            XmlNode rootNode = xmlDoc.CreateNode(XmlNodeType.Element, SoapException.DetailElementName.Name,
                                    SoapException.DetailElementName.Namespace);
            //Build specific details for the SoapException
            //Add first child of detail XML element.
            XmlNode errorNode = xmlDoc.CreateNode(XmlNodeType.Element, "Error",
                webServiceURI);

            //Create and set the value for the ErrorMessage node
            XmlNode errorMessageNode = xmlDoc.CreateNode(XmlNodeType.Element, "ErrorMessage", webServiceURI);
            errorMessageNode.InnerText = errorMessage;


            //Create and set the value for the ErrorSource node
            XmlNode errorSourceNode =
                xmlDoc.CreateNode(XmlNodeType.Element, "ErrorSource",
                webServiceURI);
            errorSourceNode.InnerText = errorSource;

            errorNode.AppendChild(errorMessageNode);
            errorNode.AppendChild(errorSourceNode);

            //Append the Detail node to the root node
            rootNode.AppendChild(errorNode);
            //Construct the exception
            SoapException soapEx = new SoapException(errorMessage,
                faultCode, errorSource,
                rootNode);
            //Raise the exception  back to the caller
            return soapEx;

        }

    }



}